# Environment example for AGENCIA NASSER Almería (Next.js)
# Copy this file to .env.local and fill in the values
# Never commit your real secrets to version control

# ==========================
# App
# ==========================
NODE_ENV=production
# Base URL of the deployed app (optional, used in emails)
# NEXT_PUBLIC_APP_URL=https://agencianasseralmeria.com

# ==========================
# Stripe (Payments)
# ==========================
# Publishable (client-side) key — safe to expose in the browser
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=

# Secret (server-side) key — NEVER expose publicly
STRIPE_SECRET_KEY=

# Webhook signing secret (from Stripe Dashboard > Webhooks)
STRIPE_WEBHOOK_SECRET=

# ==========================
# PayPal (Optional, if using PayPal)
# ==========================
# Client ID for the browser SDK (can also be used server-side)
NEXT_PUBLIC_PAYPAL_CLIENT_ID=

# Server credentials for order verification
PAYPAL_CLIENT_ID=
PAYPAL_CLIENT_SECRET=

# ==========================
# Email (Optional, if sending email confirmations)
# ==========================
# For Gmail, enable 2FA and use an App Password
EMAIL_USER=
EMAIL_PASS=

# ==========================
# Other
# ==========================
# Locale default (en, ar, fr, es)
NEXT_PUBLIC_DEFAULT_LOCALE=ar

# ==========================
# Notes
# ==========================
# 1) Set these in .env.local on the VPS, then rebuild and restart:
#    pm2 stop booking || true
#    NEXT_BUILD_CACHE=0 npm run build
#    pm2 start npm --name "booking" -- start
#    pm2 save
# 2) In Stripe Dashboard (Live), add a webhook endpoint:
#    https://agencianasseralmeria.com/api/stripe/webhook
#    Events: checkout.session.completed
#    Copy the signing secret into STRIPE_WEBHOOK_SECRET